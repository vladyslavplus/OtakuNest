services:
  productservice:
    build:
      context: .
      dockerfile: ./OtakuNest.ProductService/Dockerfile 
    ports:
      - "5001:8080" 
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Username=postgres;Password=12345678;Database=ecomm-productservice-db;
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  userservice:
    build:
      context: .
      dockerfile: ./OtakuNest.UserService/Dockerfile
    ports:
      - "5002:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Username=postgres;Password=12345678;Database=ecomm-userservice-db;
      - Jwt__Key=QmJ0zLVzKn6hw4IcszPgQY2vDjJvYqVztuI4bq1+qk2ZCXR4DKZrGhZfrs0+NbyT
      - Jwt__Issuer=OtakuNest.UserService
      - Jwt__Audience=OtakuNest.Client
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 12345678
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"     
      - "15672:15672"   
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  pgdata: